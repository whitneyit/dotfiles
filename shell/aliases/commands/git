#!/usr/bin/env bash

# If we have hub installed, alias it now
# if [ "$(type -P hub)" ]; then
#     alias git="hub"
# fi

function cdg() {
    cd "$(dirname $(gp))"
}

alias                  ga="git add"
__git_complete         ga _git_add
function ga1() {
    git add $(git status --porcelain | sed s/^...// | sed -n '1p')
}
__git_complete        ga1 _git_add
function ga2() {
    git add $(git status --porcelain | sed s/^...// | sed -n '2p')
}
__git_complete        ga2 _git_add
function ga3() {
    git add $(git status --porcelain | sed s/^...// | sed -n '3p')
}
__git_complete        ga3 _git_add
function ga4() {
    git add $(git status --porcelain | sed s/^...// | sed -n '4p')
}
__git_complete        ga4 _git_add
function ga5() {
    git add $(git status --porcelain | sed s/^...// | sed -n '5p')
}
__git_complete        ga5 _git_add
function ga6() {
    git add $(git status --porcelain | sed s/^...// | sed -n '6p')
}
__git_complete        ga6 _git_add
function ga7() {
    git add $(git status --porcelain | sed s/^...// | sed -n '7p')
}
__git_complete        ga7 _git_add
function ga8() {
    git add $(git status --porcelain | sed s/^...// | sed -n '8p')
}
__git_complete        ga8 _git_add
function ga9() {
    git add $(git status --porcelain | sed s/^...// | sed -n '9p')
}
__git_complete        ga9 _git_add
function ga10() {
    git add $(git status --porcelain | sed s/^...// | sed -n '10p')
}
__git_complete        ga10 _git_add
alias                 gaa="git add --all"
__git_complete        gaa _git_add
alias                 gap="git add --patch"
__git_complete        gap _git_add
alias                 gbl="git blame --show-number --show-email"
# No completion for `git blame`
alias                 gbr="git branch --verbose" # -v
__git_complete        gbr _git_branch
alias                gbra="git branch --verbose --all" # -v -a
__git_complete       gbra _git_branch
alias                gbrr="git branch --verbose --remote" # -v -r
__git_complete       gbrr _git_branch
alias                gbrd="git branch --delete" # -d, or -D to ignore merge status
__git_complete       gbrd _git_branch
alias                gbrm="git branch -m" # no such thing as --move / --rename
__git_complete       gbrm _git_branch
alias               gbrdf="git branch -D" # Force delete
__git_complete      gbrdf _git_branch
alias               gbrdr="git branch --delete --remote"
__git_complete      gbrdr _git_branch
alias               gbrmf="git branch -M" # force move
__git_complete      gbrmf _git_branch
alias                 gco="git checkout"
__git_complete        gco _git_checkout
alias                gcom="git checkout master"
__git_complete       gcom _git_checkout
alias                gcod="git checkout develop"
__git_complete       gcod _git_checkout
alias                gcob="git checkout -b" # no such thing as --branch
__git_complete       gcob _git_checkout
alias                gcop="git checkout --patch" # -p
__git_complete       gcop _git_checkout
function gcoa() {
    git checkout "$(dirname $(gp))"
}
__git_complete       gcoa _git_checkout
alias                 gcp="git cherry-pick"
__git_complete        gcp _git_cherry_pick
alias                gcpa="git cherry-pick --abort"
__git_complete       gcpa _git_cherry_pick
alias                gcpc="git cherry-pick --continue"
__git_complete       gcpc _git_cherry_pick
alias               gcpcn="GIT_EDITOR=true git cherry-pick --continue" # There is no `--no-edit` option."
__git_complete      gcpcn _git_cherry_pick
alias                gcps="git cherry-pick --skip"
__git_complete       gcps _git_cherry_pick
alias                 gcn="git clean -d -x --force --dry-run" # no such thing as --directories, -x ignores .gitignore
__git_complete        gcn _git_clean
alias                gcnf="git clean -d -x --force"
__git_complete       gcnf _git_clean
alias                 gcl="git clone  --progress --verbose"
__git_complete        gcl _git_clone
alias                 gcm="git commit            --verbose" # -v
__git_complete        gcm _git_commit
alias                gcmm="git commit            --verbose --message" # -v -m, -vm
__git_complete       gcmm _git_commit
alias                gcma="git commit            --verbose --amend"
__git_complete       gcma _git_commit
alias               gcmam="git commit            --verbose --amend --message"
__git_complete      gcmam _git_commit
alias               gcman="git commit            --verbose --amend --no-edit"
__git_complete      gcman _git_commit
function gcmx() {
    pbpaste | git commit --verbose --file -
}
__git_complete       gcmx _git_commit
function gcmax() {
    pbpaste | git commit --verbose --amend --file -
}
__git_complete      gcmax _git_commit
alias                 gcf="git config"
__git_complete        gcf _git_config
alias                gcfl="git config --list"
__git_complete       gcfl _git_config
alias                  gd="git diff"
__git_complete         gd _git_diff
alias                 gdl="git difftool"
__git_complete        gdl _git_difftool
alias                 gdn="git diff --name-only"
__git_complete        gdn _git_diff
alias                 gds="git diff             --staged"
__git_complete        gds _git_diff
alias                gdst="git diff             --staged --text"
__git_complete       gdst _git_diff
function gdsx() {
  git diff                                      --staged $@ -- . ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete       gdsx _git_diff
alias                 gdt="git diff                      --text"
__git_complete        gdt _git_diff
function gdx() {
  git diff                                               $@ -- . ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete        gdx _git_diff
alias                gdsn="git diff --name-only --staged"
__git_complete       gdsn _git_diff
alias                  gf="git fetch       --progress --verbose"
__git_complete         gf _git_fetch
alias                 gfa="git fetch --all --progress --verbose"
__git_complete        gfa _git_fetch
alias                gfaf="git fetch --all --progress --verbose --force"
__git_complete       gfaf _git_fetch
alias                 gfo="git fetch       --progress --verbose origin"
__git_complete        gfo _git_fetch
alias                gfod="git fetch       --progress --verbose origin develop"
__git_complete       gfod _git_fetch
alias                gfom="git fetch       --progress --verbose origin master"
__git_complete       gfom _git_fetch
alias                 gfu="git fetch       --progress --verbose upstream"
__git_complete        gfu _git_fetch
alias                gfud="git fetch       --progress --verbose upstream develop"
__git_complete       gfud _git_fetch
alias                gfum="git fetch       --progress --verbose upstream master"
__git_complete       gfum _git_fetch
alias                 gft="git fetch       --progress --verbose --tags"
__git_complete        gft _git_fetch
alias                gftf="git fetch       --progress --verbose --tags --force"
__git_complete       gftf _git_fetch
alias                 gin="git init"
__git_complete        gin _git_init
alias                 gla="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete        gla _git_log
alias                glba="git log                                    --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       glba _git_log
alias                glca="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(reset) %n%B'"
__git_complete       glca _git_log
alias               glcoa="git log --no-merges                                                                --pretty=format:'%B'"
__git_complete      glcoa _git_log
alias               glfda="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' develop.."
__git_complete      glfda _git_log
alias               glfma="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' master.."
__git_complete      glfma _git_log
alias              glfoda="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' origin/develop.."
__git_complete     glfoda _git_log
alias              glfoma="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' origin/master.."
__git_complete     glfoma _git_log
alias                glga="git log                            --graph --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       glga _git_log
alias                glma="git log --merges                           --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       glma _git_log
alias                glna="git log --no-merges --name-only    --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       glna _git_log
alias               glnoa="git log --no-merges --name-only    --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:''"
__git_complete      glnoa _git_log
alias                glpa="git log --no-merges                --patch --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       glpa _git_log
alias                glsa="git log --no-merges                --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       glsa _git_log
alias                glia="git log                                    --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' ..@{upstream}"
__git_complete       glia _git_log
alias               glipa="git log                            --patch --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' ..@{upstream}"
__git_complete      glipa _git_log
alias               gliga="git log                            --graph --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' ..@{upstream}"
__git_complete      gliga _git_log
alias               glisa="git log                            --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' ..@{upstream}"
__git_complete      glisa _git_log
alias                gloa="git log                                    --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'   @{upstream}.."
__git_complete       gloa _git_log
alias               glopa="git log                            --patch --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'   @{upstream}.."
__git_complete      glopa _git_log
alias               gloga="git log                            --graph --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'   @{upstream}.."
__git_complete      gloga _git_log
alias               glosa="git log                            --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'   @{upstream}.."
__git_complete      glosa _git_log
alias                glua="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' --author='`git config --get user.name`'"
__git_complete       glua _git_log
alias               gluca="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(reset) %n%B' --author='`git config --get user.name`'"
__git_complete      gluca _git_log
alias               glupa="git log --no-merges                --patch --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' --author='`git config --get user.name`'"
__git_complete      glupa _git_log
alias               gluga="git log                            --graph --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' --author='`git config --get user.name`'"
__git_complete      gluga _git_log
alias               glusa="git log --no-merges                --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d' --author='`git config --get user.name`'"
__git_complete      glusa _git_log
alias                glra="git log --no-merges                        --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s'"
__git_complete       glra _git_log
alias                  gm="git merge --no-ff --progress --verbose"
__git_complete         gm _git_merge
alias                 gma="git merge --abort"
__git_complete        gma _git_merge
alias                 gmc="git commit" # no git merge --continue
__git_complete        gmc _git_commit
alias                 gmd="git merge --no-ff --progress --verbose develop"
__git_complete        gmd _git_merge
alias                gmdn="git merge --no-ff --progress --verbose develop --no-edit"
__git_complete       gmdn _git_merge
alias                 gmm="git merge --no-ff --progress --verbose master"
__git_complete        gmm _git_merge
alias                gmmn="git merge --no-ff --progress --verbose master  --no-edit"
__git_complete       gmmn _git_merge
alias                 gmn="git merge --no-ff --progress --verbose         --no-edit"
__git_complete        gmn _git_merge
alias                 gmv="git mv"
__git_complete        gmv _git_mv
alias                gmvf="git mv --force"
__git_complete       gmvf _git_mv
alias                  gp="git rev-parse --git-dir"
alias                 gpl="git pull          --progress --verbose"
__git_complete        gpl _git_pull
alias                gpla="git pull          --progress --verbose --all"
__git_complete       gpla _git_pull
alias                gplf="git pull          --progress --verbose                --force"
__git_complete       gplf _git_pull
alias                gplo="git pull          --progress --verbose                               origin"
__git_complete       gplo _git_pull
alias               gplod="git pull          --progress --verbose                               origin develop"
__git_complete      gplod _git_pull
alias               gplom="git pull          --progress --verbose                               origin master"
__git_complete      gplom _git_pull
alias                gplu="git pull          --progress --verbose                               upstream"
__git_complete       gplu _git_pull
alias               gplud="git pull          --progress --verbose                               upstream develop"
__git_complete      gplud _git_pull
alias               gplum="git pull          --progress --verbose                               upstream master"
__git_complete      gplum _git_pull
alias                 gps="git push          --progress --verbose"
__git_complete        gps _git_push
alias                gpsa="git push          --progress --verbose --all"
__git_complete       gpsa _git_push
alias               gpsaf="git push          --progress --verbose --all          --force"
__git_complete      gpsaf _git_push
alias                gpsf="git push          --progress --verbose                --force"
__git_complete       gpsf _git_push
alias                gpsd="git push          --progress --verbose       --delete"
__git_complete       gpsd _git_push
alias               gpsdf="git push          --progress --verbose       --delete --force"
__git_complete      gpsdf _git_push
alias                gpst="git push          --progress --verbose                        --tags"
__git_complete       gpst _git_push
alias               gpstf="git push          --progress --verbose                --force --tags"
__git_complete      gpstf _git_push
alias                gpso="git push          --progress --verbose                               origin"
__git_complete       gpso _git_push
alias               gpsof="git push          --progress --verbose                --force        origin"
__git_complete      gpsof _git_push
alias               gpsod="git push          --progress --verbose                               origin develop"
__git_complete      gpsod _git_push
alias              gpsodf="git push          --progress --verbose                --force        origin develop"
__git_complete     gpsodf _git_push
alias               gpsom="git push          --progress --verbose                               origin master"
__git_complete      gpsom _git_push
alias              gpsomf="git push          --progress --verbose                --force        origin master"
__git_complete     gpsomf _git_push
alias                gpsu="git push          --progress --verbose                               upstream"
__git_complete       gpsu _git_push
alias               gpsuf="git push          --progress --verbose                --force        upstream"
__git_complete      gpsuf _git_push
alias               gpsud="git push          --progress --verbose                               upstream develop"
__git_complete      gpsud _git_push
alias              gpsudf="git push          --progress --verbose                --force        upstream develop"
__git_complete     gpsudf _git_push
alias               gpsum="git push          --progress --verbose                               upstream master"
__git_complete      gpsum _git_push
alias              gpsumf="git push          --progress --verbose                --force        upstream master"
__git_complete     gpsumf _git_push
alias                 grb="git rebase"
__git_complete        grb _git_rebase
alias                grba="git rebase --abort"
__git_complete       grba _git_rebase
alias                grbc="git rebase --continue"
__git_complete       grbc _git_rebase
alias               grbcn="GIT_EDITOR=true git rebase --continue" # There is no `--no-edit` option.
__git_complete      grbcn _git_rebase
alias                grbi="git rebase --interactive"
__git_complete       grbi _git_rebase
alias                grbp="git rebase --show-current-patch"
__git_complete       grbp _git_rebase
alias                grbs="git rebase --skip"
__git_complete       grbs _git_rebase
alias                grbd="git rebase develop"
__git_complete       grbd _git_rebase
alias                grbm="git rebase master"
__git_complete       grbm _git_rebase
alias               grbod="git rebase origin/develop"
__git_complete      grbod _git_rebase
alias               grbom="git rebase origin/master"
__git_complete      grbom _git_rebase
alias               grbud="git rebase upstream/develop"
__git_complete      grbud _git_rebase
alias               grbum="git rebase upstream/master"
__git_complete      grbum _git_rebase
alias                grfa="git reflog                                 --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(blue)%gs %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       grfa _git_reflog
alias               grfpa="git reflog                         --patch --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(blue)%gs %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete      grfpa _git_reflog
alias               grfga="git reflog                         --graph --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(blue)%gs %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete      grfga _git_reflog
alias               grfsa="git reflog                         --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(blue)%gs %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete      grfsa _git_reflog
alias                 grt="git remote"
__git_complete        grt _git_remote
alias                grta="git remote --verbose add"
__git_complete       grta _git_remote
alias               grtao="git remote --verbose add origin"
__git_complete      grtao _git_remote
alias               grtau="git remote --verbose add upstream"
__git_complete      grtau _git_remote
alias                grtp="git remote --verbose prune"
__git_complete       grtp _git_remote
alias               grtpo="git remote --verbose prune origin"
__git_complete      grtpo _git_remote
alias               grtpu="git remote --verbose prune upstream"
__git_complete      grtpu _git_remote
alias                grtm="git remote --verbose rename"
__git_complete       grtm _git_remote
alias                grtd="git remote --verbose remove"
__git_complete       grtd _git_remote
alias                 grs="git reset"
__git_complete        grs _git_reset
alias                grsh="git reset --hard"
__git_complete       grsh _git_reset
alias               grshh="git reset --hard 'HEAD^'"
__git_complete      grshh _git_reset
alias               grsh1="git reset --hard HEAD~0"
__git_complete      grsh1 _git_reset
alias               grsh2="git reset --hard HEAD~1"
__git_complete      grsh2 _git_reset
alias               grsh3="git reset --hard HEAD~2"
__git_complete      grsh3 _git_reset
alias               grsh4="git reset --hard HEAD~3"
__git_complete      grsh4 _git_reset
alias               grsh5="git reset --hard HEAD~4"
__git_complete      grsh5 _git_reset
alias               grsh6="git reset --hard HEAD~5"
__git_complete      grsh6 _git_reset
alias               grsh7="git reset --hard HEAD~6"
__git_complete      grsh7 _git_reset
alias               grsh8="git reset --hard HEAD~7"
__git_complete      grsh8 _git_reset
alias               grsh9="git reset --hard HEAD~8"
__git_complete      grsh9 _git_reset
alias              grsh10="git reset --hard HEAD~9"
__git_complete     grsh10 _git_reset
alias                grss="git reset --soft"
__git_complete       grss _git_reset
alias               grssh="git reset --soft 'HEAD^'"
__git_complete      grssh _git_reset
alias               grss1="git reset --soft HEAD@{0}"
__git_complete      grsh1 _git_reset
alias               grss2="git reset --soft HEAD@{1}"
__git_complete      grss2 _git_reset
alias               grss3="git reset --soft HEAD@{2}"
__git_complete      grss3 _git_reset
alias               grss4="git reset --soft HEAD@{3}"
__git_complete      grss4 _git_reset
alias               grss5="git reset --soft HEAD@{4}"
__git_complete      grss5 _git_reset
alias               grss6="git reset --soft HEAD@{5}"
__git_complete      grss6 _git_reset
alias               grss7="git reset --soft HEAD@{6}"
__git_complete      grss7 _git_reset
alias               grss8="git reset --soft HEAD@{7}"
__git_complete      grss8 _git_reset
alias               grss9="git reset --soft HEAD@{8}"
__git_complete      grss9 _git_reset
alias              grss10="git reset --soft HEAD@{9}"
__git_complete     grss10 _git_reset
alias               grsho="git reset --hard origin"
__git_complete      grsho _git_reset
alias               grsso="git reset --soft origin"
__git_complete      grsso _git_reset
alias              grshod="git reset --hard origin/develop"
__git_complete     grshod _git_reset
alias              grssod="git reset --soft origin/develop"
__git_complete     grssod _git_reset
alias              grshom="git reset --hard origin/master"
__git_complete     grshom _git_reset
alias              grssom="git reset --soft origin/master"
__git_complete     grssom _git_reset
alias               grshu="git reset --hard upstream"
__git_complete      grshu _git_reset
alias               grssu="git reset --soft upstream"
__git_complete      grssu _git_reset
alias              grshud="git reset --hard upstream/develop"
__git_complete     grshud _git_reset
alias              grssud="git reset --soft upstream/develop"
__git_complete     grssud _git_reset
alias              grshum="git reset --hard upstream/master"
__git_complete     grshum _git_reset
alias              grssum="git reset --soft upstream/master"
__git_complete     grssum _git_reset
alias                 grm="git rm"
__git_complete        grm _git_rm
alias                grmf="git rm -f"
__git_complete       grmf _git_rm
alias                grmr="git rm -r" # There is no `--recursive`
__git_complete       grmr _git_rm
alias               grmrf="git rm -rf"
__git_complete      grmrf _git_rm
alias                grmc="git rm --cached"
__git_complete       grmc _git_rm
alias               grmca="git rm --cached -r ."
__git_complete      grmca _git_rm
alias                 grv="git revert"
__git_complete        grv _git_revert
alias                grvh="git revert HEAD"
__git_complete       grvh _git_revert
alias               grvhn="git revert HEAD --no-edit"
__git_complete      grvhn _git_revert
alias                  gh="git stash save"
__git_complete         gh _git_stash
alias                 gha="git stash apply"
__git_complete        gha _git_stash
alias                gha1="git stash apply stash@{0}"
__git_complete       gha1 _git_stash
alias                gha2="git stash apply stash@{1}"
__git_complete       gha2 _git_stash
alias                gha3="git stash apply stash@{2}"
__git_complete       gha3 _git_stash
alias                gha4="git stash apply stash@{3}"
__git_complete       gha4 _git_stash
alias                gha5="git stash apply stash@{4}"
__git_complete       gha5 _git_stash
alias                gha6="git stash apply stash@{5}"
__git_complete       gha6 _git_stash
alias                gha7="git stash apply stash@{6}"
__git_complete       gha7 _git_stash
alias                gha8="git stash apply stash@{7}"
__git_complete       gha8 _git_stash
alias                gha9="git stash apply stash@{8}"
__git_complete       gha9 _git_stash
alias               gha10="git stash apply stash@{9}"
__git_complete      gha10 _git_stash
alias                 ghc="git stash clear"
__git_complete        ghc _git_stash
alias                 ghd="git stash drop"
__git_complete        ghd _git_stash
alias                ghd1="git stash drop stash@{0}"
__git_complete       ghd1 _git_stash
alias                ghd2="git stash drop stash@{1}"
__git_complete       ghd2 _git_stash
alias                ghd3="git stash drop stash@{2}"
__git_complete       ghd3 _git_stash
alias                ghd4="git stash drop stash@{3}"
__git_complete       ghd4 _git_stash
alias                ghd5="git stash drop stash@{4}"
__git_complete       ghd5 _git_stash
alias                ghd6="git stash drop stash@{5}"
__git_complete       ghd6 _git_stash
alias                ghd7="git stash drop stash@{6}"
__git_complete       ghd7 _git_stash
alias                ghd8="git stash drop stash@{7}"
__git_complete       ghd8 _git_stash
alias                ghd9="git stash drop stash@{8}"
__git_complete       ghd9 _git_stash
alias               ghd10="git stash drop stash@{9}"
__git_complete      ghd10 _git_stash
alias                 ghp="git stash pop"
__git_complete        ghp _git_stash
alias                ghla="git stash list                             --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete       ghla _git_stash
alias               ghlna="git stash list      --name-only            --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete      ghlna _git_stash
alias              ghlnoa="git stash list      --name-only            --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:''"
__git_complete     ghlnoa _git_stash
alias               ghlpa="git stash list                     --patch --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete      ghlpa _git_stash
alias               ghlsa="git stash list                     --stat  --date=format:'%a %d %b %Y %H:%M:%S %z' --pretty=format:'%C(yellow)%>(10)%h %C(green)[%cd | %>(14)%cr] %C(cyan)%ae %C(white)%s%C(red)%d'"
__git_complete      ghlsa _git_stash
alias                 gst="git status --untracked-files=all"
__git_complete        gst _git_status
alias                gstc="git status"
__git_complete       gstc _git_status
alias                gsti="git status --untracked-files=all --ignored"
__git_complete       gsti _git_status
alias                 gsm="git submodule"
__git_complete        gsm _git_submodule
alias                gsma="git submodule add"
__git_complete       gsma _git_submodule
alias                gsmc="git submodule foreach --recursive git checkout ."
__git_complete       gsmc _git_submodule
alias                gsmi="git submodule update --recursive --init"
__git_complete       gsmi _git_submodule
alias                gsmu="git pull --recurse-submodules && git submodule update --recursive --remote"
__git_complete       gsmu _git_submodule
alias               gsmfm="git submodule foreach git config core.fileMode false"
__git_complete      gsmfm _git_submodule
alias                  gt="git tag"
__git_complete         gt _git_tag
alias                 gtd="git tag --delete"
__git_complete        gtd _git_tag
alias                 gtf="git tag --force"
__git_complete        gtf _git_tag
alias                 gtl="git tag --list"
__git_complete        gtl _git_tag
function gta() {
    local use_color="yes"
    if [[ "$@" == *--no-color* ]]; then
        use_color="no"
    fi
    local current_sha="$(git log --pretty=format:'%h' -1)"
    local all_types=()
    local all_tags=()
    local all_shas=()
    local all_commit_messages=()
    for local_tag in $(git tag --list); do
        local local_sha="$(git log --pretty=format:'%h' -1 ${local_tag})"
        local local_commit_message="$(git log --pretty=format:'%s' -1 ${local_tag})"
        all_types+=("local")
        all_tags+=("${local_tag}")
        all_shas+=("${local_sha}")
        all_commit_messages+=("${local_commit_message}")
    done
    for remote in $(git remote); do
        local remote_tags=""
        readarray -t remote_tags <<< "$(git ls-remote --tags ${remote})"
        for remote_line in "${remote_tags[@]}"; do
            if [ -z "${remote_line}" ]; then
                continue
            fi
            local _remote_parts=($remote_line);
            local _remote_full_sha=${_remote_parts[0]}
            local _remote_ref=${_remote_parts[1]}
            local remote_tag=${_remote_ref##*/}
            local remote_sha="$(git log --pretty=format:'%h' -1 ${_remote_full_sha})"
            local remote_commit_message="$(git log --pretty=format:'%s' -1 ${_remote_full_sha})"
            all_types+=("remote")
            all_tags+=("remotes/${remote}/${remote_tag}")
            all_shas+=("${remote_sha}")
            all_commit_messages+=("${remote_commit_message}")
        done
    done
    local widest_tag=-1
    for tag in "${all_tags[@]}"; do
        if [ ${#tag} -gt ${widest_tag} ]; then
            widest_tag=${#tag}
        fi
    done
    if [ ${widest_tag} -eq -1 ]; then
        widest_tag=40
    fi
    local widest_sha=-1
    for sha in "${all_shas[@]}"; do
        if [ ${#sha} -gt ${widest_sha} ]; then
            widest_sha=${#sha}
        fi
    done
    if [ ${widest_sha} -eq -1 ]; then
        widest_sha=10
    fi
    for index in "${!all_types[@]}"; do
        local type="${all_types[$index]}"
        local tag="${all_tags[$index]}"
        local sha="${all_shas[$index]}"
        local commit_message="${all_commit_messages[$index]}"
        local status="  "
        local separator=" "
        if [ "${use_color}" == "yes" ]; then
            local separator="${RESET} "
            if [ "${type}" == "local" ]; then
                if [ "${sha}" == "${current_sha}" ]; then
                    status="* ${GREEN}"
                else
                    status="  ${YELLOW}"
                fi
            elif [ "${type}" == "remote" ]; then
                # if [ "${sha}" == "${current_sha}" ]; then
                #     status="* ${CYAN}"
                # else
                    status="  ${BLUE}"
                # fi
            fi
        else
            if [ "${type}" == "local" ]; then
                if [ "${sha}" == "${current_sha}" ]; then
                    status="* "
                fi
            fi
        fi;
        printf "${status}%-${widest_tag}s${separator}%-${widest_sha}s%s%s ${commit_message}\n" "${tag}" "${sha}"
    done
}
__git_complete        gta _git_tag
function gxc1() {
    git log --no-merges --pretty=format:"%B" HEAD~0 -1 | pbcopy
}
function gxc2() {
    git log --no-merges --pretty=format:"%B" HEAD~1 -1 | pbcopy
}
function gxc3() {
    git log --no-merges --pretty=format:"%B" HEAD~2 -1 | pbcopy
}
function gxc4() {
    git log --no-merges --pretty=format:"%B" HEAD~3 -1 | pbcopy
}
function gxc5() {
    git log --no-merges --pretty=format:"%B" HEAD~4 -1 | pbcopy
}
function gxc6() {
    git log --no-merges --pretty=format:"%B" HEAD~5 -1 | pbcopy
}
function gxc7() {
    git log --no-merges --pretty=format:"%B" HEAD~6 -1 | pbcopy
}
function gxc8() {
    git log --no-merges --pretty=format:"%B" HEAD~7 -1 | pbcopy
}
function gxc9() {
    git log --no-merges --pretty=format:"%B" HEAD~8 -1 | pbcopy
}
function gxc10() {
    git log --no-merges --pretty=format:"%B" HEAD~9 -1 | pbcopy
}
function gxh1() {
    git log --no-merges --pretty=format:"%h" HEAD~0 -1 | pbcopy
}
function gxh2() {
    git log --no-merges --pretty=format:"%h" HEAD~1 -1 | pbcopy
}
function gxh3() {
    git log --no-merges --pretty=format:"%h" HEAD~2 -1 | pbcopy
}
function gxh4() {
    git log --no-merges --pretty=format:"%h" HEAD~3 -1 | pbcopy
}
function gxh5() {
    git log --no-merges --pretty=format:"%h" HEAD~4 -1 | pbcopy
}
function gxh6() {
    git log --no-merges --pretty=format:"%h" HEAD~5 -1 | pbcopy
}
function gxh7() {
    git log --no-merges --pretty=format:"%h" HEAD~6 -1 | pbcopy
}
function gxh8() {
    git log --no-merges --pretty=format:"%h" HEAD~7 -1 | pbcopy
}
function gxh9() {
    git log --no-merges --pretty=format:"%h" HEAD~8 -1 | pbcopy
}
function gxh10() {
    git log --no-merges --pretty=format:"%h" HEAD~9 -1 | pbcopy
}
function gxr() {
    local start="$(git log --no-merges --pretty=format:"%h" HEAD~$2 -1)"
    local end="$(git log --no-merges --pretty=format:"%h" HEAD~$1 -1)"
    if [ "${start}" == "${end}" ]; then
        echo "${start}" | pbcopy
    else
        local range="${start}^..${end}"
        echo "${range}" | pbcopy
    fi
}
function gxr1() {
    gxr 0 0
}
function gxr2() {
    gxr 0 1
}
function gxr3() {
    gxr 0 2
}
function gxr4() {
    gxr 0 3
}
function gxr5() {
    gxr 0 4
}
function gxr6() {
    gxr 0 5
}
function gxr7() {
    gxr 0 6
}
function gxr8() {
    gxr 0 7
}
function gxr9() {
    gxr 0 8
}
function gxr10() {
    gxr 0 9
}


alias                  gv="git --version" # No git complete for _git_version

# Root commit
function gr() {
    git rev-list --max-parents=0 HEAD
}

# Assume unchanged
alias                 gau="git update-index --assume-unchanged"
alias                gnau="git update-index --no-assume-unchanged"
alias                gaul="git ls-files -v | grep '^h' | cut -c 3-"

# List ignored files
alias                 gig="git ls-files --ignored --exclude-standard"
__git_complete        gig _git_ls_files

# Commit: incoming
alias                 gli="glia  -10"
__git_complete        gli _git_log
alias                gli1="glia  -1"
__git_complete       gli1 _git_log
alias                glis="glisa -10"
__git_complete       glis _git_log
alias               glis1="glisa -1"
__git_complete      glis1 _git_log
alias                glip="glipa -10"
__git_complete       glip _git_log
alias               glip1="glipa -1"
__git_complete      glip1 _git_log
alias                glig="gliga -10"
__git_complete       glig _git_log
alias               glig1="gliga -1"
__git_complete      glig1 _git_log

# Commit: outgoing
alias                 glo="gloa  -10"
__git_complete        glo _git_log
alias                glo1="gloa  -1"
__git_complete       glo1 _git_log
alias                glos="glosa -10"
__git_complete       glos _git_log
alias               glos1="glosa -1"
__git_complete      glos1 _git_log
alias                glop="glopa -10"
__git_complete       glop _git_log
alias               glop1="glopa -1"
__git_complete      glop1 _git_log
alias                glog="gloga -10"
__git_complete       glog _git_log
alias               glog1="gloga -1"
__git_complete      glog1 _git_log

# Commit: user
alias                 glu="glua  -10"
__git_complete        glu _git_log
alias                glu1="glua  -1"
__git_complete       glu1 _git_log
alias                gluc="gluca -10"
__git_complete       gluc _git_log
alias               gluc1="gluca -1"
__git_complete      gluc1 _git_log
alias                glup="glupa -10"
__git_complete       glup _git_log
alias               glup1="glupa -1"
__git_complete      glup1 _git_log
alias                glug="gluga -10"
__git_complete       glug _git_log
alias               glug1="gluga -1"
__git_complete      glug1 _git_log
alias                glus="glusa -10"
__git_complete       glus _git_log
alias               glus1="glusa -1"
__git_complete      glus1 _git_log

# Log
alias                gco-="gco   -"
__git_complete       gco- _git_checkout
alias                  gl="gla   -10"
__git_complete         gl _git_log
alias                 gl1="gla   -1"
__git_complete        gl1 _git_log
alias                 glb="glba  -10"
__git_complete        glb _git_log
alias                glb1="glba  -1"
__git_complete       glb1 _git_log
alias                 glc="glca  -10"
__git_complete        glc _git_log
alias                glc1="glca  -1"
__git_complete       glc1 _git_log
alias                glco="glcoa  -10"
__git_complete       glco _git_log
alias               glco1="glcoa  -1"
__git_complete      glco1 _git_log
alias                glfd="glfda -10"
__git_complete       glfd _git_log
alias               glfd1="glfda -1"
__git_complete      glfd1 _git_log
alias                glfm="glfma -10"
__git_complete       glfm _git_log
alias               glfm1="glfma -1"
__git_complete      glfm1 _git_log
alias               glfod="glfoda -10"
__git_complete      glfod _git_log
alias              glfod1="glfoda -1"
__git_complete     glfod1 _git_log
alias               glfom="glfoma -10"
__git_complete      glfom _git_log
alias              glfom1="glfoma -1"
__git_complete     glfom1 _git_log
alias                 glr="glra  -10"
__git_complete        glr _git_log
alias                glr1="glra  -1"
__git_complete       glr1 _git_log
alias                 glg="glga  -10"
__git_complete        glg _git_log
alias                glg1="glga  -1"
__git_complete       glg1 _git_log
alias                 glm="glma  -10"
__git_complete        glm _git_log
alias                glm1="glma  -1"
__git_complete       glm1 _git_log
alias                 gln="glna  -10"
__git_complete        gln _git_log
alias                gln1="glna  -1"
__git_complete       gln1 _git_log
alias                glno="glnoa  -10"
__git_complete       glno _git_log
alias               glno1="glnoa  -1"
__git_complete      glno1 _git_log
alias                 glp="glpa  -10"
__git_complete        glp _git_log
function glpx() {
                           glpa  -10 $@ -- . ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete       glpx _git_log
alias                glp1="glpa  -1"
__git_complete       glp1 _git_log
function glp1x() {
                           glpa  -1  $@ -- . ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete      glp1x _git_log
alias                 gls="glsa  -10"
__git_complete        gls _git_log
alias                gls1="glsa  -1"
__git_complete       gls1 _git_log
function gls1x() {
                           glsa  -1  $@ -- . ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete      gls1x _git_log

# Rebase up to the first, (root), commit.
function grbir() {
    git rebase --interactive `gr`
}
alias              grbirr="git rebase --interactive --root"

alias               grbi1="git rebase --interactive HEAD~1"
__git_complete      grbi1 _git_rebase
alias               grbi2="git rebase --interactive HEAD~2"
__git_complete      grbi2 _git_rebase
alias               grbi3="git rebase --interactive HEAD~3"
__git_complete      grbi3 _git_rebase
alias               grbi4="git rebase --interactive HEAD~4"
__git_complete      grbi4 _git_rebase
alias               grbi5="git rebase --interactive HEAD~5"
__git_complete      grbi5 _git_rebase
alias               grbi6="git rebase --interactive HEAD~6"
__git_complete      grbi6 _git_rebase
alias               grbi7="git rebase --interactive HEAD~7"
__git_complete      grbi7 _git_rebase
alias               grbi8="git rebase --interactive HEAD~8"
__git_complete      grbi8 _git_rebase
alias               grbi9="git rebase --interactive HEAD~9"
__git_complete      grbi9 _git_rebase
alias              grbi10="git rebase --interactive HEAD~10"
__git_complete     grbi10 _git_rebase
alias              grbi11="git rebase --interactive HEAD~11"
__git_complete     grbi11 _git_rebase
alias              grbi12="git rebase --interactive HEAD~12"
__git_complete     grbi12 _git_rebase
alias              grbi13="git rebase --interactive HEAD~13"
__git_complete     grbi13 _git_rebase
alias              grbi14="git rebase --interactive HEAD~14"
__git_complete     grbi14 _git_rebase
alias              grbi15="git rebase --interactive HEAD~15"
__git_complete     grbi15 _git_rebase
alias              grbi16="git rebase --interactive HEAD~16"
__git_complete     grbi16 _git_rebase
alias              grbi17="git rebase --interactive HEAD~17"
__git_complete     grbi17 _git_rebase
alias              grbi18="git rebase --interactive HEAD~18"
__git_complete     grbi18 _git_rebase
alias              grbi19="git rebase --interactive HEAD~19"
__git_complete     grbi19 _git_rebase
alias              grbi20="git rebase --interactive HEAD~20"
__git_complete     grbi20 _git_rebase

# Reflog
alias                 grf="grfa  -10"
__git_complete        grf _git_log
alias                grf1="grfa  -1"
__git_complete       grf1 _git_log
alias                grfs="grfsa -10"
__git_complete       grfs _git_log
alias               grfs1="grfsa -1"
__git_complete      grfs1 _git_log
alias                grfp="grfpa -10"
__git_complete       grfp _git_log
alias               grfp1="grfpa -1"
__git_complete      grfp1 _git_log
alias                grfg="grfga -10"
__git_complete       grfg _git_log
alias               grfg1="grfga -1"
__git_complete      grfg1 _git_log

# Stash
alias                 ghl="ghla -10"
__git_complete        ghl _git_stash
alias                ghl1="ghla -1"
__git_complete       ghl1 _git_stash
alias                ghln="ghlna -10"
__git_complete       ghln _git_stash
alias               ghln1="ghlna -1"
__git_complete      ghln1 _git_stash
alias               ghlno="ghlnoa -10"
__git_complete      ghlno _git_stash
alias              ghlno1="ghlnoa -1"
__git_complete     ghlno1 _git_stash
alias                ghlp="ghlpa -10"
__git_complete       ghlp _git_stash
alias               ghlp1="ghlpa -1"
__git_complete      ghlp1 _git_stash
function ghlp1x() {
                           ghlpa  -1  $@ -- . ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete     ghlp1x _git_stash
alias                ghls="ghlsa -10"
__git_complete       ghls _git_stash
alias               ghls1="ghlsa -1"
__git_complete      ghls1 _git_stash
function ghls1x() {
                           ghlsa  -1  $@ --   ':!package-lock.json' ':!**/package-lock.json' ':!yarn.lock' ':!**/yarn.lock'
}
__git_complete     ghls1x _git_stash

# vim: set cc=0:syn=sh :
