""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Here we define all of our plugin specific keybinds       "
"                                                          "
" Table of Contents:                                       "
"                                                          "
"  1. Better JSON                                          "
"  2. Ctrl P                                               "
"  3. Easy Motion                                          "
"  4. Editor Config                                        "
"  5. Emmet                                                "
"  6. Indent Guides                                        "
"  7. JSX                                                  "
"  8. Multiple cursors                                     "
"  9. NERDTree                                             "
" 10. NERDTreeTabs                                         "
" 11. Powerline                                            "
" 12. Syntastic                                            "
"                                                          "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 1. Better JSON                                           "
" https://github.com/elzr/vim-                             "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Disable conceal
let g:vim_json_syntax_conceal = 0



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 2. Ctrl P                                                "
" https://github.com/kien/ctrlp.vim                        "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Search by fullpath instead of just filename
let g:ctrlp_by_filename = 0

" Define the location of the cache dir
let g:ctrlp_cache_dir = '~/.vim/plugins/ctrlp'

" The max amount of files to display
let g:ctrlp_max_files = 0

" Show hidden files when using CtrlP
let g:ctrlp_regexp = 0

" Show hidden files when using CtrlP
let g:ctrlp_show_hidden = 1

" From where do we want CtrlP to search
let g:ctrlp_working_path_mode = 'ra'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 3. Easy Motion                                           "
" https://github.com/Lokaltog/vim-easymotion               "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Set the default `<leader>` key
let g:EasyMotion_leader_key = '<Leader><leader>'

" Match target keys by smartcase
" Type 'v' and matches 'v' & 'V', and 'V' matches only 'V'.
let g:EasyMotion_smartcase = 1

" Use uppercase target labels and type as a lower case
let g:EasyMotion_use_upper = 1

" keep cursor colum when JK motion
let g:EasyMotion_startofline = 0

" Configure mappings
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 4. Editor Config                                         "
" https://github.com/editorconfig/editorconfig             "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable verbose mode
let g:EditorConfig_verbose = 0

" Specify the files to exclude
let g:EditorConfig_exclude_patterns = ['fugitive://.*']



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 5. Emmet                                                 "
" https://github.com/mattn/emmet-vim                       "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Here we define the leader key for all Emmet commands. You can easily see all
" the registered commands by typing `:map <C-e>`
let g:user_emmet_leader_key = '<C-e>'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 6. Indent Guides                                         "
" https://github.com/nathanaelkane/vim-indent-guides       "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" This controls whether or not we want the guides to be displayed at startup
let g:indent_guides_enable_on_vim_startup = 0

" This controls at which `level` of indentation to start the plugin at
let g:indent_guides_start_level = 1

" This determines how wide the guide should be. `0` makes it as wide as the
" defined value for `shiftwidth`
let g:indent_guides_guide_size = 0

" Here we disable the auto colours and replace them with our own
let g:indent_guides_auto_colors = 0

" And he we define the colourscheme to be used
if has("autocmd")
    autocmd VimEnter,Colorscheme * :highlight IndentGuidesOdd  ctermbg=237
    autocmd VimEnter,Colorscheme * :highlight IndentGuidesEven ctermbg=238
endif



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 7. JSX                                                   "
" https://github.com/mxw/vim-jsx                           "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Highlight *.js files as well
let g:jsx_ext_required = 0



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 8. Multiple cursors                                      "
" https://github.com/terryma/vim-multiple-cursors          "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Let me define my own mappings
let g:multi_cursor_use_default_mapping = 0
let g:multi_cursor_next_key = '<C-f>'
let g:multi_cursor_prev_key = '<C-k>'
let g:multi_cursor_skip_key = '<C-j>'
let g:multi_cursor_quit_key = '<Esc>'

" Don't exit out of multi mode in vims normal mode, enter into multi instead
let g:multi_cursor_exit_from_visual_mode = 0
let g:multi_cursor_exit_from_inset_mode = 0



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 9. NERDTree                                              "
" https://github.com/scrooloose/nerdtree                   "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Make sure we see bookmarks and help at the top
let g:NERDTreeMinimalUI = 0

" Enable fancy arrows
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '~'

" Set default width for NERDTree panel
let g:NERDTreeWinSize = 40

" Make NERDTree show hidden files
let g:NERDTreeShowHidden = 1



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 10. NERDTreeTabs                                         "
" https://github.com/jistr/vim-nerdtree-tabs               "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" When switching into a tab, make sure that focus is on the file window
let g:nerdtree_tabs_focus_on_files = 1

" Exit vim if the only window open is NERDTree
let g:nerdtree_tabs_autoclose = 0



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 11. Powerline                                            "
" https://github.com/Lokaltog/vim-powerline                "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Make the powerline use the enhanced font icons
let g:Powerline_symbols = 'fancy'

" Make powerline support pathogen
set rtp+=$HOME/.vim/bundle/powerline/powerline/bindings/vim



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 12. Syntastic                                            "
" https://github.com/scrooloose/syntastic                  "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable `eslint` for JavaScript files
let g:syntastic_javascript_checkers = ['eslint']

" Specify the output directory and module type for TypeScript
let g:syntastic_typescript_tsc_args = '--outDir ./.tsc --module amd'

" Ensure that the location list window is alwasy populated
let g:syntastic_always_populate_loc_list = 1

" Open and close the location list automaticly
let g:syntastic_auto_loc_list = 1

" Display errors from all checkers at once
let g:syntastic_aggregate_errors = 1

" Don't perform checks when trying to quit a file
let g:syntastic_check_on_wq = 0
