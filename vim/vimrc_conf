" Disable vi-compatibility
set nocompatible

" Point to location of pathogen submodule (since it's not in .vim/autoload)
silent! runtime bundle/vim-pathogen/autoload/pathogen.vim

" Call pathogen plugin management
silent! call pathogen#infect()

" This generates all the "pathogen" plugin helptags
silent! call pathogen#helptags()

if has("autocmd")

    " Load files for specific filetypes
    filetype on
    filetype indent on
    filetype plugin on

    " Ensure the correct filetypes are used
    autocmd BufNewFile,BufRead *.aj         set filetype=java
    autocmd BufNewFile,BufRead *.cshtml     set filetype=html
    autocmd BufNewFile,BufRead *.es6        set filetype=javascript
    autocmd BufNewFile,BufRead *.es7        set filetype=javascript
    autocmd BufNewFile,BufRead *.gitignore  set filetype=sh
    autocmd BufNewFile,BufRead *.jsx        set filetype=javascript
    autocmd BufNewFile,BufRead *.md         set filetype=markdown
    autocmd BufNewFile,BufRead *.ngdoc      set filetype=markdown
    autocmd BufNewFile,BufRead *.rb         set filetype=ruby
    autocmd BufNewFile,BufRead Jakefile     set filetype=javascript
    autocmd BufNewFile,BufRead minttyrc     set filetype=sh
    autocmd BufNewFile,BufRead Vagrantfile  set filetype=ruby

    " Here we alias files like `.bashrc`, then we fallback for anything else
    autocmd BufNewFile,BufRead .*rc         set filetype=sh
    autocmd BufNewFile,BufRead .babelrc     set filetype=json
    autocmd BufNewFile,BufRead .bowerrc     set filetype=json
    autocmd BufNewFile,BufRead .csslintrc   set filetype=json
    autocmd BufNewFile,BufRead .eslintrc    set filetype=json
    autocmd BufNewFile,BufRead .jscsrc      set filetype=json
    autocmd BufNewFile,BufRead .jshintrc    set filetype=json
    autocmd BufNewFile,BufRead .tslintrc    set filetype=json

    " Also set "commented json" files to `json`
    autocmd BufNewFile,BufRead cjson        set filetype=json

    " Add filetype support for `.eslintignore`, `.jshintignore`, and
    " `.npmignore` files
    autocmd BufNewFile,BufRead .*ignore set filetype=conf

    " Open all folds when we load a file
    autocmd VimEnter    * exe "normal zR"
    autocmd BufReadPost * exe "normal zR"

    " Adds support for the typescript compiler
    autocmd QuickFixCmdPost [^l]* nested cwindow
    autocmd QuickFixCmdPost    l* nested lwindow

    " Enable hyphens in keywords on these filetypes
    autocmd FileType css setlocal iskeyword+=-
    autocmd FileType html setlocal iskeyword+=-

endif

if has("cmdline_info")

    " Show the cursor line and column number
    set ruler

    " Show partial commands in status line
    set showcmd

    " Show whether in insert or replace mode
    set noshowmode

endif

if has("statusline")

    " Always show status line
    set laststatus=2

    " Broken down into easily includeable segments
    set statusline=%<%f\

    " Options
    set statusline+=%w%h%m%r

    " Current dir
    set statusline+=\ [%{getcwd()}]

    " Right aligned file nav info
    set statusline+=%=%-14.(%l,%c%V%)\ %p%%

endif

if has("extra_search")

    " Highlight searches [use :noh to clear]
    set nohlsearch

    " Highlight dynamically as pattern is typed
    set incsearch

    " Ignore case of searches...
    set ignorecase

    " ...unless has mixed case
    set smartcase

endif

" If we are able to store undo history. Basically this allows us to record undo
" actions even after files are closed
if exists("&undodir")

    " Set the location of where the undo files will be kept
    set undodir=$HOME/.vim/undo

    " This enables the setting.
    set undofile

endif

" Set some default tab settings
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set textwidth=0

" Allows scrolling and a few other things to work. Though I don't condone
" using a mouse, it helps with the *ACCIDENTAL* mouse usage. I had to turn if
" off though. I kept hitting the trackpad on my Surface and it just started to
" piss me off after a while
" set mouse=a

" Determines the maximum amount of tabs to be used before we start falling
" back to buffers
set tabpagemax=1000

" Make substitution global inside a line
set gdefault

" This considers 0 prefixed numbers as decimal
set nrformats-=octal

" Set the title for xterm
set title

" Set to auto read when a file is changed from the outside
set autoread

" Backspace through everything in INSERT mode
set backspace=indent,eol,start

" Optimize for fast terminal connections
set ttyfast

" Use UTF-8 without BOM
set encoding=utf-8 nobomb

" Inform vim of the current shell
set shell=bash

" No line wrapping
set nowrap

" But when we enter wrap mode, make sure that we dont break on words
set linebreak

" Enable line numbers
set number

" Highlight current line
set cursorline

" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Don't reset cursor to start of line when moving around.
set nostartofline

" Removes top toolbar
set guioptions-=T

" Removes right hand scroll bar
set guioptions-=r

" Removes left hand scroll bar
set guioptions-=L

" Sets the lineheight
set linespace=15

" Define our tags file
set tags=tags

" Always set autoindenting on
set autoindent

" This indents deeper per code block, eg an `if statement`
set smartindent

" Copy the previous indentation on autoindenting
set copyindent

" When using `>` and `<`, this will indent to multiple of `shiftwidth` and not
" just add to it. Eg an indent of 10 spaces will become 12
set shiftround

" Timeout stuff
set timeout
set timeoutlen=300
set ttimeoutlen=300

" Don't beep
set visualbell
set noerrorbells

" Save on buffer switch
set autowrite

" Show 'invisible' characters
set list

" Enable spell check
set spell
set spelllang=en_gb

" Causes the split windows to be focuses upon open
set splitbelow
set splitright

" Set characters used to indicate 'invisible' characters.
" The comment below is required so that er can set the `End Of Line` character
" to a `space`. If we didn't have the comment, the `editorconfig` plugin would
" of stripped the trailing whitespace
set listchars+=tab:▸~
set listchars+=trail:·
set listchars+=nbsp:_
set listchars+=eol:\  " DO NOT DELETE THIS COMMENT

" Enable the wildmenu
set wildmenu
set wildmode=list:longest

" Centralize backups, swapfiles and undo history
set backupdir=$HOME/.vim/backups
set directory=$HOME/.vim/swaps

" Specify the location of the `~/.viminfo` file
set viminfo+=n$HOME/.viminfo

" Turn backup off, since most stuff is in git anyway. The above stuff is just
" so we get the folder structure correct so if we ever turn swaps on, they
" don't pollute our local directories
set nobackup
set nowritebackup
set noswapfile
